Define Door Using number AND isCar
   sequence Constructor
   Set This number to number
   set this isCar to isCar
   set this opened to false
   Endsequence
ENDDEFINE

Define Game with no initial parameters
   sequence Constructor
   set THIS doors to Ampty array
   set this carInDoor
   Set This doorPicked
   set this openedGoatDoor
   set this finalPick
   set THIS won
   set this myDoors
   set this chooseCarDoor
   set this guestDoor
   set this hostDoor
   set this guestFinalPick
   set this guestFinalPickSwitch
   Endsequence


   Sequence myDoors
   set door1 to new Door number0, isCar false
   set door2 to new Door number1, isCar false
   set door3 to new Door number2, isCar false
   Then push them to this doors array
   Endsequence 

   sequence chooseCarDoor
   set doorContaincar to random number between 0 and 2
   set this carInDoor to this doors and give this doors the value of doorContainCar
   set this.carInDoor.isCar to true
   Endsequence

   sequence guestDoor 
   set doorGuest to random number between 0 and 2
   set this.doorPicked to this doors and give this doors the value of doorGuest
   Endsequence

   sequence hostDoor
   for i equals 0, i lower than 3, increment i 
   if this doors i not equals this carInDoor and this doorPicked
   set this doors i opened to true
   set this openedGoatDoor to this doors i
   Endsequence

   sequence guestFinalPickSwitch
   for i equals 0, i lower than 3, increment i
   if this doors i not equals this openedGoatDoor and this doorPicked
   return and set this finalPick to this doors if
   Endsequence

   sequence guestFinalPick
   set this finalPick to this doorPicked

   sequence isTheGameWonWithChange
   set this won to false
   if this doorPicked equals this carInDoor
   set this won to true
   return this won

   sequence isTheGameWon
   set this won to false
   if this doorPicked equals this carInDoor
   set this won to true
   return this won
   Endsequence

   sequence doGameWithChange
   call chooseCarDoor
   call guestDoor
   call hostDoor
   call guestFinalPickSwitch
   return this isTheGameWonWithChange
   Endsequence

   sequence doGameNoChange
   call chooseCarDoor
   call guestDoor
   call hostDoor
   call guestFinalPick
   return this isTheGameWon
   Endsequence
ENDDEFINE

Define statistics
   sequence Constructor
   set this gamesWithSameDoorWon
   set this gamesWithSameDoorLost
   set this gamesWithDoorChangeWon
   set this gamesWithDoorChangeLost
   Endsequence
   
   sequence statisticsWithChange using totalGame
   set gameWon to 0
   for i equals 0, i lower than totalGame increment i
   set game to new Game 
   Call game doGameWithChange
   if gam isTheGameWonWithChange equals true 
   increment this gamesWithDoorChangeWon
   else increment gamesWithSameDoorLost
   set gameWon to this gamesWithDoorChangeWon divided by totalGame multiplied by 100
   set gameLost to this gamesWithDoorChangeLost divided by totalGame multiplied by 100
   return gameWon + " % of games won when not switching Game"
   Endsequence

   sequence statisticsWithNoChange using totalGame
   set gameWon to 0
   set gameLost to 0
   for i equals 0, i lower than totalGame increment i
   set game to new Game
   call game doGameNoChange
   if game isTheGameWon equals true
   increment this gamesWithDoorChangeWon
   else increment this.gamesWithSameDoorLost
   set gameWon to this gameWithDoorChangeWon divided by totalGame multiplied by 100
   set gameWon to this gameWithSameDoorLost divided by totalGame multiplied by 100
   return gameWon + " % of games won when switching Game"






